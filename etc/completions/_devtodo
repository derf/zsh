#compdef devtodo todo tda tde tdd tdr
## completion for devtodo 0.1.20
## Daniel Friesel <derf@derf.homelinux.org>
## https://derf.homelinux.org/~derf/dotfiles/completion/_devtodo

typeset -a arg_generic arg_add todo_opts \
           priorities
typeset -A arg_pair arg_desc
typeset -i i
typeset expl

for ((i=2; i <= $#words; i++)) {
	if [[ $words[$i] == '--database' ]] {
		todo_opts+=(--database ${~words[$((++i))]})
	}
}

priorities=(verylow low medium high veryhigh)

arg_add=(
	'-p[priority]:priority:_priority'
	'-g[parent item]:parent:_index'
)

arg_generic=(
	'--remove[remove items]:index:_index'
	'--database[database file]:file:_files'
	'--global-database[global database file]:file:_files'
	'*--colour[item color]:color:_color'
	'--force-colour[force use of colors]'
	'--mono[no colors]'
	'--help[display help]'
	'--version[display version]'
	'--title[todo title]:string: '
	'--date-format[strftime time formet]:time string: '
	'*--format[define format]:format:_format'
	'*--use-format[output format]:format:_format'
	'--sort[sort database]:expression: '
	'--paranoid[paranoid parmissions etc]'
	'--database-loaders[loader order]:database loader: '
	'--backup[backup database]:count: '
	'--timeout[display timeout]:seconds: '
	'--purge[purge completed items]:days: '
	'*'{'--filter','-f'}'[show items matching filter]:filter:_filter'
#	'*::item:_index'
)

arg_pair=(
	'verbose'     'v'
	'add'         'a'
	'graft'       'g'
	'link'        'l'
	'reparent'    'R'
	'priority'    'p'
	'edit'        'e'
	'done'        'd'
	'not-done'    'D'
	'global'      'G'
	'TODO'        'T'
	'all'         'A'
)

arg_desc=(
	'verbose'     '[be verbose]'
	'add'         '[add item]:item'
	'graft'       '[parent item]:parent:_index'
	'link'        '[link file into database]:database:_files'
	'reparent'    '[change item parent]:index:_index'
	'priority'    '[item priority]:priority:_priority'
	'edit'        '[edit item]:index:_index'
	'done'        '[mark as done]:index:_index'
	'not-done'    '[mark as undone]:index:_index -u'
	'global'      '[use global database]'
	'TODO'        '[generate TODO file]'
	'all'         '[show all items]'
)

for arg in ${(k)arg_pair}; {
	arg_generic+='(--'$arg')-'${arg_pair[$arg]}${arg_desc[$arg]}
	arg_generic+='(-'${arg_pair[$arg]}')--'${arg}${arg_desc[$arg]}
}

function _index () {
	typeset i
	typeset -a index desc
	for i in $*; do
		case $i in
			-u) todo_opts+=(--filter done)
		esac
	done
	for i in $(todo $todo_opts --format display='%n '); do
		index+=${i}:$(todo $todo_opts --format display='%t' $i)
	done
	_describe -t items index index
}

function _color () {
	if compset -P '*='; then
		_wanted color expl 'color' \
		compadd black red green yellow blue magenta cyan white default
	else
		_wanted item expl 'item' \
		compadd -S '=' $priorities title info
	fi
}

function _filter {
	typeset prefix
	if [[ ${#${words[$CURRENT]}} -gt 0 ]] {
		prefix=${${words[$CURRENT]}[1]}
		_wanted expression expl 'filter expression' \
		compadd -p $prefix -- all children done $priorities
	} else {
		# XXX the '-' makes problems
		_wanted expression expl 'filter expression' \
		compadd -S '' -- - + = all children done $priorities
	}
}

function _format () {
}

function _priority () {
	_wanted priority expl 'priority' \
	compadd default $priorities
}

case $service in
	tda)
		_arguments -s $arg_add
	;;
	tde|tdd)
		_arguments -s ':index:_index'
	;;
	tdr)
		zstyle ':completion:*:tdr:*' ignore-line yes
		_arguments -s '*:index:_index'
	;;
	*todo)
		_arguments -s $arg_generic
	;;
esac
